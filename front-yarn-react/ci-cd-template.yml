steps:
#-----------   CI ------------------    
# Instalar Node.js v14
- task: NodeTool@0
  displayName: 'Instalar Node.js'
  inputs:
    versionSpec: $(nodeVersion)
    checkLatest: false  # Desactivar la verificación de la última versión

# Instalar Yarn
- script: 'npm install -g yarn'
  displayName: 'Instalar Yarn'

# Instalar env-cmd
- script: 'yarn add env-cmd'
  displayName: 'Instalar env-cmd'

# Instalar dependencias
- script: 'yarn install'
  displayName: 'Dependencies Yarn '

# Compilar
- script: |
    echo "Ejecutando yarn build con el entorno: $(env)"
    yarn build:$(env)
  displayName: 'Compilar con Yarn build'

# Listar archivos en el directorio build
- script: 'ls -la $(Build.SourcesDirectory)/build'
  displayName: 'Listar archivos en el directorio build'

# Publicar el artefacto
- task: PublishBuildArtifacts@1
  displayName: 'Publicar artefacto: build'
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/build'
    ArtifactName: 'build'
    publishLocation: 'Container'

##-----------   CD ------------------    

- task: AWSCLI@1
  displayName: 'Sincronizar con S3'
  inputs:
    awsCredentials: '$(awsServiceConnection)'
    regionName: 'us-east-1'
    awsCommand: 's3'
    awsSubCommand: 'sync'
    awsArguments: '--delete ./build s3://$(bucket) --region us-east-1'

- task: AWSCLI@1
  displayName: 'Invalidar CloudFront'
  inputs:
    awsCredentials: '$(awsServiceConnection)'
    regionName: 'us-east-1'
    awsCommand: 'cloudfront'
    awsSubCommand: 'create-invalidation'
    awsArguments: '--distribution-id $(distribution) --paths "/*"'